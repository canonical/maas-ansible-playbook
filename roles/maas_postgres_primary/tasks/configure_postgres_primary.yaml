---

- name: "Generate Replication Password"
  ansible.builtin.shell: openssl rand -base64 14
  register: maas_postgres_replication_password_output
  when: maas_postgres_replication_password is undefined

- name: "Save Replication Password"
  set_fact:
    maas_postgres_replication_password: "{{ maas_postgres_replication_password_output.stdout }}"
    cacheable: true
  run_once: true
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['maas_postgres_secondary'] + groups['maas_postgres_primary'] }}"

- name: "Create Replication User"
  community.postgresql.postgresql_user:
    name: "{{ maas_postgres_replication_user }}"
    password: "{{ maas_postgres_replication_password }}"
    role_attr_flags: replication
    state: "{{ 'present' if maas_postgres_action|lower == 'install' else maas_postgres_action }}"
  become: true
  become_user: postgres

- name: "Create Replication Slot"
  community.postgresql.postgresql_slot:
    name: "{{ maas_postgres_replication_slot }}"
    db: "maasdb"
    state: "{{ 'present' if maas_postgres_action|lower == 'install' else maas_postgres_action }}"
  become: true
  become_user: postgres
  register: maas_postgres_enable_sync

- name: "Update Postgres Config for Replication"
  ansible.builtin.include_role:
    name: maas_postgres
    tasks_from: write_postgres_config
