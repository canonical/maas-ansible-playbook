---
- name: Generate List of Archiveable Directories
  set_fact:
    archive_list: "{{ archive_list|default([]) + [item] }}"
  loop:
    - "{{ ('maas_postgres_primary' in group_names) | ternary('{{ maas_postgres_backup_dir }}', None) }}"
    - "{{ (('maas_region_controller' in group_names) or ('maas_rack_controller' in group_names)) | ternary('{{ maas_config_backup_path }}', None)  }}"
    - "{{ (('maas_region_controller' in group_names) or ('maas_rack_controller' in group_names)) | ternary('{{ maas_runtime_backup_path }}', None)  }}"
  when: item

- name: Bundle Backup Assets
  community.general.archive:
    path: "{{ archive_list }}"
    exclude_path:
      - "{{ maas_exclude_backup_path }}"
    dest: "{{ maas_backup_dest_path }}"

# ansible.builtin.fetch has the ability to be oom killed on large files, so we're using scp instead
- name: Download Backup
  local_action: "ansible.builtin.command scp {{ ansible_user }}@{{ inventory_hostname }}:{{ maas_backup_dest_path }} {{ maas_backup_download_path }}"
  become: false # don't need sudo locally

- name: Remove Backup from Remote Host
  ansible.builtin.file:
    path: "{{ maas_backup_dest_path }}"
    state: absent
