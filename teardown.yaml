---
# will reset the system state to that prior to maas install

- hosts: all
  become: true
  gather_facts: true
  tasks:

  - name: "Collect facts about installed packages"
    package_facts:
      manager: auto
      strategy: all

  - name: "Collect facts about system services"
    service_facts:

  - name: "Uninstall MAAS region"
    ansible.builtin.include_role:
      name: "maas_region_controller"
      tasks_from: teardown

  - name: "Uninstall MAAS rack"
    ansible.builtin.include_role:
      name: maas_rack_controller
      tasks_from: teardown

  - name: "Remove metrics"
    ansible.builtin.include_role:
      name: common
      tasks_from: metrics
    when: "'telemetry' in ansible_facts.services"

  - name: "Uninstall postgres primary"
    ansible.builtin.include_role:
      name: maas_postgres_primary
      tasks_from: teardown
    # when: "'postgres' in ansible_facts.packages"

  - name: "Uninstall postgres secondary"
    ansible.builtin.include_role:
      name: maas_postgres_secondary
      tasks_from: teardown
    # when: "'postgres' in ansible_facts.packages"

  - name: "Uninstall postgres"
    ansible.builtin.include_role:
      name: maas_postgres
      tasks_from: teardown
    # when: "'postgres' in ansible_facts.packages"

  - name: "Uninstall HAProxy"
    ansible.builtin.include_role:
      name: maas_proxy
      tasks_from: teardown
    # when: "'haproxy' in ansible_facts.packages"

  - name: "Install pip for Configuration Dependencies"
    ansible.builtin.apt:
      name: python3-pip
      state: absent
    when: uninstall_pip

  - name: Remove ununsed packages from the cache
    ansible.builtin.apt:
      autoclean: true
